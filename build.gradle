apply plugin: 'com.android.library'
apply plugin: 'maven'
buildscript {
    repositories {
        mavenCentral()
        maven{ url'http://maven.aliyun.com/nexus/content/groups/public/' }
        maven{ url'http://maven.aliyun.com/nexus/content/repositories/jcenter'}
//        jcenter()
        maven {
            url 'https://maven.aliyun.com/repository/google'
        }
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.3'
    }
}
allprojects {
    repositories {
        mavenCentral()
        maven{ url'http://maven.aliyun.com/nexus/content/groups/public/' }
        maven{ url'http://maven.aliyun.com/nexus/content/repositories/jcenter'}
        maven {
            url 'https://maven.aliyun.com/repository/google'
        }
        flatDir {
            dirs 'libs'
        }
    }
}

android {
    compileSdkVersion 29

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        externalNativeBuild {
            ndkBuild {
                path 'src/main/java/jni/Android.mk'
            }
        }
        sourceSets.main {
            jni.srcDirs = []
            jniLibs.srcDirs = ['src/main/jniLibs']
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

task ndkBuild(type: Exec, description: 'Compile JNI source via NDK') {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    def ndkDir = properties.getProperty('ndk.dir')
    commandLine "$ndkDir/ndk-build",
            "NDK_PROJECT_PATH=$projectDir.absolutePath\\build",
            "APP_BUILD_SCRIPT=$projectDir.absolutePath\\jni\\Android.mk",
            "NDK_APPLICATION_MK=$projectDir.absolutePath\\jni\\Application.mk"
    //你自己的mk文件目录
}

// copy so库到指定的目录
task CopyToJniLibs(type: Copy, dependsOn: 'ndkBuild', description: 'copy the native libs to jniLibs') {
    from fileTree(dir: file(buildDir.absolutePath + '/libs'), include: '**/*.so')
    into file('src/main/jniLibs')
}
dependencies {
}